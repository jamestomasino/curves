var https = require('https');

var peking = exports;

// `pushValues`
// Pushes an array of value objects to a ducksboard API endpoint.
// The value objects may or may not have timestamps associated with them.
peking.pushValues = function (options, cb) {
    push(options.values, options, cb);
};

// `pushValueWithTimestamp`
// Sends a number or string to a ducksboard API endpoint with a timestamp.
peking.pushValueWithTimestamp = function (options, cb) {
    push({value: options.value, timestamp: options.timestamp}, options, cb);   
};

// `pushValue`
// Sends a number or a string to a ducksboard API endpoint.
peking.pushValue = function (options, cb) {
    push({value: options.value}, options, cb);
};

var push = function (report, options, cb) {
    options = options || {};
    
    var api_key = options.api_key || process.env.DUCKSBOARD_API_KEY;
    var host = options.host || process.env.DUCKSBOARD_HOST || 'push.ducksboard.com';
    var port = options.port || 443;
    
    if (!options.endpoint) {
        return cb('Must specify options.endpoint.');
    }
     
    if (!api_key) {
        return cb('Must specify a ducksboard API key.');
    }
        
    // Setup request options.
    var body = JSON.stringify(report);
    var options = {
        host: host,
        port: port,
        path: '/v/' + options.endpoint,
        method: 'POST',
        auth: api_key + ':x',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
          'Content-Length': body.length
        }
    };

    // Create https request.
    var req = https.request(options, function (res) {
        res.setEncoding('utf8');
        res.on('end', function () {
            cb(res.statusCode !== 200 ? res.statusCode : null, res.body);
        });
    });
    
    // Send JSON
    req.write(body);
    req.end();    
};
